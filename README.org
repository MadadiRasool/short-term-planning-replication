#+TITLE: Data and Code For "Short-term Planning, Monetary Policy, and Macroeconomic Persistence"

The code in this replication package estimates the models and
constructs the figures and tables from Gust, Herbst, and Lopez-Salido
(AEJ: Macro, 202x) using Fortran and Python.  

** Data
   
   All of the data is publicly available. 
   
*** Data Availability and Provenance Statements

    Here is a description of the data used in the estimation of the models.

    1. *Real Gross Domestic Product.* This is part of National Income
       and Product Accounts (NIPA), released by the Bureau of Economic
       Analysis.  (FRED mnenomic ~GDPC1~.)

    2. *Civilian Noninstitutional Population.* This is part of the
       Employment Situation report, released by the Bureau of Labor
       Statistics. (FRED mnenomic ~CNP16OV~.)

    3. *GDP Deflator.* This is part of National Income
       and Product Accounts (NIPA), released by the Bureau of Economic
       Analysis.  (FRED mnenomic ~GDPDEF~.)

    4. *Federal Funds Rate.* This is part of the H.15 Selected
       Interest Rates report, released by the Board of Governors of
       the Federal Reserve System.  (FRED mnenomic ~FEDFUNDS~.)

       
    Here is a description of additional data used in plotting. 

    1. *Potential GDP.* This is part of the Budget and Economic
       Outlook report, released by the Congressional Budget
       Office. (FRED mnenomic ~GDPPOT~.)

    2. *Recession Indicator.* This is part of the OECD's Recession Indicator
       Series, provided by the Federal Reserve Bank of St. Louis.
       (FRED mnenomic ~USRECQ~.)

    3. *Long-term Inflation Expectations.* This is part of the
       historical FRB/US database, released by the Board of Governors
       of the Federal Reserve System.  The data can be obtained 
       [[https://www.federalreserve.gov/econres/us-models-package.htm][here]].  The variable name is ~PTR~. 

*** Statement about Rights

    We certify that we have legitimate access to and permission to use
    the data used in this manuscript.

*** License for Data

    All the data except the "Recession Indicator" are from
    U.S. government agencies are "works of the United States
    government" under the Copyright Act.  As such, these data are
    ineligible for copyright protection and in the public domain.
    
    The "Recession Indicator" can be copied with citation:

    Federal Reserve Bank of St. Louis, NBER based Recession Indicators
    for the United States from the Period following the Peak through
    the Trough [USRECQ], retrieved from FRED, Federal Reserve Bank of
    St. Louis; https://fred.stlouisfed.org/series/USRECQ, January
    5, 2021.
** Computation

*** Software Requirements

- Linux-based operating system. 
- Conda package and environment management system with python 3.6 or higher.
  - The file ~env.yaml~ contains the details of the python3+mpif90 environment to run all of the code.  See /Instructions to Replicators/ step 2 to install this environment.  The code was
        executed using ~gcc~ version 7.3.0 and ~MPICH~ version 3.3. 
- A valid TeX installation. 

*** Memory and Runtime Requirements

    The replication material involves roughly 500 estimations of a
    Bayesian DSGE models via sequential Monte Carlo.  On a standard
    desktop computer, this will take about *two weeks*.  

    /Note/: The authors ran these estimations simulatenously on a 2000 CPU
    cluster.

**** Description of code

     The code is structured as follows.  Each of the
     ~NN-some-python-script.py~ contains a script to download data,
     construct a model, estimate model, or make a figure or table.  

     There are two additional python files and an extra fortran files. 
     - ~model.py~: This file contains a thin object
       (=ModelAttributes=) for holding a given model, in addition to
       details about important characteristics (its name, estimation
       details, et cetera).  Below this definition, each model is
       instantiated.
     - ~figures.py~: This file contains plotting settings and contexts.
     - ~single_agent_template.f90~: This file contains a fortran model
       template for the single agent models. 

       
     The ~models/~ directory contain the models in [[https://yaml.org][YAML]] format.  These
     files are parsed by the python package ~dsge~, referenced above. 

     The ~fortran~ directory initially contains the output of the SMC
     sampler.  Once ~scripts/create-fortran-models.py~ has been run,
     it also contains the fortran models.  (Note running this file is
     not necessary to create the figures and tables.)  For each model,
     there are 10 output files, each corresponding to a single run of
     the SMC sampler.  The naming convention is
     ~fortran/{model}/output-NN.json~ where the ~{model}~ refers to
     the specific model and ~NN~ is an integer from 1 to 10.  These
     files will be recreated if Step 7 (below) is executed.

     The Canonical New Keynesian model and Finite Horizon Planning
     phibar model directories also contain an additional directory
     called ~time-posteriors~.  These directories contain output files
     ~output-DDD.json~.  These are the posterior based only on data up
     until time period ~DDD~.  This data is used to create
     Figure 3. These files will be recreated if Step 8 (below) is executed. 


*** License for Code

    Code written by the co-authors are each a "work of the United States government" under the Copyright Act.  As such, these codes are ineligible for copyright protection and in the public domain.

** Instructions to Replicators

  1. Install [[https://docs.conda.io/en/latest/][Conda]].
  2. Install LaTex, if you don't already have it on your system. On
     Ubuntu, this can be accomplished via the shell prompt:
     #+begin_src sh
     user@computer:~$ sudo apt-get install texlive-full
     #+end_src
  3. Download the file, and cd to the ~short-term-planning-replication-directory~. From a shell prompt, create the necessary python environment, using:
     #+begin_src sh
     user@computer:short-term-planning-replication$ conda env create --file env.yaml
     #+end_src 
  4. Activate the environment with:
     #+begin_src sh
     user@computer:short-term-planning-replication$ source activate short-term-planning-replication
     #+end_src 
  5. /(Optional.)/ Download the data from FRED:
     #+begin_src sh
     (short-term-planning-replication) user@computer:short-term-planning-replication$ python scripts/01-construct-estimation-data.py
     #+end_src      
  6. /(Optional, only to estimate the models.)/ Create the fortran models with:
     #+begin_src sh
     (short-term-planning-replication) user@computer:short-term-planning-replication$ python scripts/02-construct-fortran-models.py
     #+end_src      
  7. /(Optional, only to estimate the models.)/ Estimate all the (full sample) models with: 
     #+begin_src sh
       (short-term-planning-replication) user@computer:short-term-planning-replication$ chmod +x batch/estimate-all-models.sh # ensure script is executable
       (short-term-planning-replication) user@computer:short-term-planning-replication$ ./batch/estimate-all-models.sh
     #+end_src      
     /Note/: this can take quite a long time! To estimate an
     individual model, use ~scripts/03-estimate-baseline-models.py~
     with appropriate command line arguments.  See:
     #+begin_src sh
     (short-term-planning-replication) user@computer:short-term-planning-replication$ python scripts/03-estimate-baseline-models.py --help

         usage: 03-estimate-baseline-models.py [-h]
                                               [--model {canonical_NK,trends,finite_horizon,finite_horizon_gamma,finite_horizon_phibar,angeetos_lian,habits,habits_lampifinite_horizon_phibar_k0,finite_horizon_phibar_k1,finite_horizon_phibar_k2,finite_horizon_phibar_k3,finite_horizon_phibar_k4}]
                                               [--nprocs NPROCS]
          
         Estimate a Bayesian DSGE model 10 times via SMC
          
         optional arguments:
           -h, --help            show this help message and exit
           --model {canonical_NK,trends,finite_horizon,finite_horizon_gamma,finite_horizon_phibar,angeetos_lian,habits,habits_lampifinite_horizon_phibar_k0,finite_horizon_phibar_k1,finite_horizon_phibar_k2,finite_horizon_phibar_k3,finite_horizon_phibar_k4}
           --nprocs NPROCS
     #+end_src      
     

  8. /(Optional, only to estimate time posteriors.)/ Estimate all the time posteriors of CNK and FHP models with: 
     #+begin_src sh
       (short-term-planning-replication) user@computer:short-term-planning-replication$ chmod +x scripts/04-estimate-time-posteriors.sh # ensure script is executable
       (short-term-planning-replication) user@computer:short-term-planning-replication$ ./scripts/04-estimate-time-posteriors.sh
     #+end_src      
     /Note/: this can take quite a long time! 

  9. Construct the tables and figures.
     #+begin_src sh
     (short-term-planning-replication) user@computer:short-term-planning-replication$ chmod +x batch/create-all-figures-and-tables.sh # ensure script is executable
     (short-term-planning-replication) user@computer:short-term-planning-replication$ ./batch/create-all-figures-and-tables.sh
     #+end_src           
     /Note/: See the details below to for how to create individual tables and figures.  


*** List of tables and programs

The provided code reproduces all numbers provided in text in the
paper.  (/Tables 1 and 2 are not the result of any computation./)

Please be aware because that numbers generated in the replication can
differ from the published version slightly because of the numerical
standard error associated with the sequential Monte Carlo algorithm.
This is particularly true of the number of effective draws, whose
calculation involves an inverse of this number. 


|----------------+------------------------------------------------------+-------------+--------------------------------------------------|
| Figure/Table # | Program                                              | Line Number | Output File                                      |
|----------------+------------------------------------------------------+-------------+--------------------------------------------------|
| Figure 1       | 05-fig-impulse-response-disinflation-shock.py        |          92 | disinflation_shock.pdf                           |
| Table 3        | 06-tab-posterior.py                                  |          69 | main-posterior-table.tex                         |
| Figure 2       | 07-fig-joint-posterior.py                            |           8 | rho_gamma_scatter.pdf                            |
| Figure 3       | 08-fig-difference-log-mdd-time.py                    |          27 | cumulative_logmdd_difference.pdf                 |
| Figure 4       | 09-fig-impulse-response-monetary-shock.py            |          20 | woodford_terminal_irf_epsi_shaded.pdf            |
| Figure 5       | 10-fig-trend-cycle-decomposition.py                  |          36 | woodford_terminal_smooth_shaded.pdf              |
| Figure 6       | 10-fig-trend-cycle-decomposition.py                  |          60 | woodford_terminal_smooth_shaded_i.pdf            |
| Figure 7       | 10-fig-trend-cycle-decomposition.py                  |          74 | woodford_terminal_y_level.pdf                    |
| Figure 8       | 11-fig-estimated-shocks.py                           |          25 | shock_series.pdf                                 |
| Figure 9       | 12-fig-trend-cycle-counterfactual.py                 |          46 | shock_decomposition.pdf                          |
| Table 4        | 13-tab-log-mdd-single-agents.py                      |          21 | single-agent-table.tex                           |
| Table 5        | 14-tab-log-mdd-alternative-models.py                 |          40 | other-nk-mdd-table.tex                           |
| Figure A-1     | 15-fig-impulse-response-monetary-shock-calibrated.py |          26 | example_irf_epsi.pdf                             |
| Table A-1      | 16-tab-posterior-comparison-appendix.py              |          65 | appendix-FH-habits-posterior-table.tex           |
| Figure A-2     | 17-fig-posterior-predictive-checks.py                |          51 | posterior-predictive-checks.pdf                  |
| Table A-2      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-forward.tex             |
| Table A-3      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-trends.tex              |
| Table A-4      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-both.tex                |
| Table A-5      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-both-gam.tex            |
| Table A-6      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-both_terminal.tex       |
| Table A-7      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-angeletos.tex           |
| Table A-8      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-habits_restricted.tex   |
| Table A-9      | 18-tab-posterior-appendix.py                         |          30 | appendix-posterior-table-habits_restricted_y.tex |
| Figure A-3     | 19-fig-estimated-innovations.py                      |          24 | innovation_series.pdf                            |
|----------------+------------------------------------------------------+-------------+--------------------------------------------------|
All output is in the directory ~figures-tables/~. 

To run any individual script:
#+begin_src sh
(short-term-planning-replication) user@computer:short-term-planning-replication$ python scripts/SCRIPT.py
#+end_src           
